---
project_name: "lexrants.me"
project_root: "/var/www/{{ project_name }}"
git_repo: "https://github.com/allgood2386/lexrants.me.git"

# The web server software to use. Can be either 'apache' or 'nginx'.
drupalvm_webserver: apache

# Settings for building a Drupal site from a makefile (if 'build_makefile:'
# is 'true').
drupal_core_path: "/var/www/{{ project_name }}/web"
drupal_domain: "{{ project_name }}"

drupal_account_name: admin
drupal_account_pass: admin
drupal_mysql_user: drupal
drupal_mysql_password: drupal
drupal_mysql_database: drupal

# Cron jobs are added to the root user's crontab. Keys include name (required),
# minute, hour, day, weekday, month, job (required), and state.
drupalvm_cron_jobs: []
  # - {
  #   name: "Drupal Cron",
  #   minute: "*/30",
  #   job: "drush -r {{ drupal_core_path }} core-cron"
  # }

# Apache VirtualHosts. Add one for each site you are running inside the VM. For
# multisite deployments, you can point multiple servernames at one documentroot.
# View the geerlingguy.apache Ansible Role README for more options.
apache_vhosts:
  - servername: "{{ drupal_domain }}"
    serveralias: "www.{{ drupal_domain }}"
    documentroot: "{{ drupal_core_path }}"
    extra_parameters: |
      RewriteEngine On
      RewriteCond %{HTTPS} off
      RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}

  - servername: "adminer.{{ project_name }}"
    documentroot: "/opt/adminer"

  - servername: "xhprof.{{ project_name }}"
    documentroot: "/usr/share/php/xhprof_html"

  - servername: "pimpmylog.{{ project_name }}"
    documentroot: "/usr/share/php/pimpmylog"

apache_vhosts_ssl:
  - {
    servername: "{{ drupal_domain }}",
    serveralias: "www.{{ drupal_domain }}",
    documentroot: "{{ drupal_core_path }}",
    certificate_file: "/etc/letsencrypt/live/{{ project_name }}/cert.pem",
    certificate_key_file: "/etc/letsencrypt/live/{{ project_name }}/privkey.pem",
    certificate_chain_file: "/etc/letsencrypt/live/{{ project_name }}/fullchain.pem"
  }

apache_ssl_cipher_suite: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK"
apache_ssl_protocol: "All -SSLv2 -SSLv3 -TLSv1.2"

apache_remove_default_vhost: true
apache_mods_enabled:
  - expires.load
  - ssl.load
  - rewrite.load

# MySQL Databases and users. If build_makefile: is true, first database will
# be used for the makefile-built site.
mysql_databases:
  - name: "{{ drupal_mysql_database }}"
    encoding: utf8
    collation: utf8_general_ci

mysql_users:
  - name: "{{ drupal_mysql_user }}"
    host: "%"
    password: "{{ drupal_mysql_password }}"
    priv: "{{ drupal_mysql_database }}.*:ALL"

# Comment out any extra utilities you don't want to install. If you don't want
# to install *any* extras, make set this value to an empty set, e.g. `[]`.
installed_extras:
  # - mailhog
  - pimpmylog
  # - nodejs
  - redis
  # - ruby
  # - selenium
  # - solr
  - varnish
  #- xdebug
  #- xhprof

# Add any extra apt or yum packages you would like installed.
extra_packages:
  - unzip

# `nodejs` must be in installed_extras for this to work.
nodejs_version: "0.12"
nodejs_npm_global_packages: []

# `ruby` must be in installed_extras for this to work.
ruby_install_gems: []

# You can configure almost anything else on the server in the rest of this file.
extra_security_enabled: true

firewall_allowed_tcp_ports:
  - "22"
  - "25"
  - "80"
  - "81"
  - "443"
firewall_log_dropped_packets: false

# PHP Configuration. Currently-supported versions: 5.5, 5.6, 7.0.
php_version: "7.0"
php_memory_limit: "192M"
php_display_errors: "On"
php_display_startup_errors: "On"
php_enable_php_fpm: true
php_realpath_cache_size: "1024K"
php_sendmail_path: "/usr/sbin/ssmtp -t"
php_opcache_enabled_in_ini: true
php_opcache_memory_consumption: "192"
php_opcache_max_accelerated_files: 4096
php_max_input_vars: "4000"

composer_path: /usr/bin/composer
composer_home_path: '/root/.composer'
# composer_global_packages:
#   - { name: phpunit/phpunit, release: '@stable' }

# Run specified scripts after VM is provisioned. Path is relative to the
# `provisioning/playbook.yml` file.
post_provision_scripts: []
  # - "../examples/scripts/configure-solr.sh"

# MySQL Configuration.
mysql_root_password: root
mysql_root_password_update: yes
mysql_enabled_on_startup: yes
mysql_slow_query_log_enabled: no
mysql_slow_query_time: 2
mysql_wait_timeout: 300

# Varnish Configuration.
varnish_listen_port: "81"
varnish_default_vcl_template_path: templates/drupalvm.vcl.j2
varnish_default_backend_host: "127.0.0.1"
varnish_default_backend_port: "80"

# Pimp my Log settings.
pimpmylog_install_dir: /usr/share/php/pimpmylog
pimpmylog_grant_all_privs: true

# XDebug configuration. XDebug is disabled by default for better performance.
php_xdebug_default_enable: 0
php_xdebug_coverage_enable: 0
php_xdebug_cli_enable: 1
php_xdebug_remote_enable: 1
php_xdebug_remote_connect_back: 1
# Use PHPSTORM for PHPStorm, sublime.xdebug for Sublime Text.
php_xdebug_idekey: PHPSTORM
php_xdebug_max_nesting_level: 256

# Solr Configuration (if enabled above).
solr_version: "4.10.4"
solr_xms: "64M"
solr_xmx: "128M"

# Selenium configuration.
selenium_version: 2.46.0

# Other configuration.
known_hosts_path: ~/.ssh/known_hosts

php_redis_install_from_source: true
php_redis_source_version: php7
redis_port: 10786

# MySQL Configuration.
mysql_root_password: root
mysql_slow_query_log_enabled: true
mysql_slow_query_time: 2
mysql_wait_timeout: 300

php_packages:
  - libapache2-mod-php7.0
  - php7.0-common
  - php7.0-cli
  - php7.0-dev
  - php7.0-fpm
  - libpcre3-dev
  - php7.0-gd
  - php7.0-curl
  - php7.0-imap
  - php7.0-json
  - php7.0-opcache
php_mysql_package: php7.0-mysql
php_fpm_daemon: php7.0-fpm
